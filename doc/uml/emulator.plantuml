class Emulator {
  +start()
  +stop()
  +loadProgram(program: String)
}

class FileReader {}

abstract class MemoryAdapter {
  +read(address: Int): Byte
  +write(address: Int, value: Byte)
}

class RAM {}
class ROM {}

class CPU {}
class Register {}

abstract class InstructionTemplate {}
class StoreInstruction
class AddInstruction
class SubInstruction
class ReadInstruction
class WriteInstruction
class JumpInstruction
class ReadKeyboardInstruction
class SwitchMemoryInstruction
class SkipEqualInstruction
class SkipNotEqualInstruction
class SetAInstruction
class SetTInstruction
class ReadTInstruction
class ConvertToBaseTenInstruction
class ConvertByteToASCIIInstruction
class DrawInstruction

interface Observable {
  +addObserver(observer: Observer)
  +removeObserver(observer: Observer)
  +notifyObservers()
}

interface BufferObserver {
  +update()
}

class Screen {}
class ScreenBuffer {}

Observable <|-- ScreenBuffer
ScreenBuffer *-- BufferObserver
BufferObserver <|-- Screen
Emulator *-- Screen
Observable -l- BufferObserver

Emulator <-- FileReader
Emulator *-- CPU
CPU *-- Register
CPU *-- MemoryAdapter
CPU *-- InstructionTemplate

InstructionTemplate <|-- StoreInstruction
InstructionTemplate <|-- AddInstruction
InstructionTemplate <|-- SubInstruction
InstructionTemplate <|-- ReadInstruction
InstructionTemplate <|-- WriteInstruction
InstructionTemplate <|-- JumpInstruction
InstructionTemplate <|-- ReadKeyboardInstruction
InstructionTemplate <|-- SwitchMemoryInstruction
InstructionTemplate <|-u- SkipEqualInstruction
InstructionTemplate <|-u- SkipNotEqualInstruction
InstructionTemplate <|-u- SetAInstruction
InstructionTemplate <|-u- SetTInstruction
InstructionTemplate <|-u- ReadTInstruction
InstructionTemplate <|-u- ConvertToBaseTenInstruction
InstructionTemplate <|-u- ConvertByteToASCIIInstruction
InstructionTemplate <|-u- DrawInstruction

MemoryAdapter <|-- RAM
MemoryAdapter <|-- ROM
MemoryAdapter <|-- ScreenBuffer
